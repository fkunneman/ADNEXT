#!/usr/bin/env python

import argparse

"""
Script to perform simple linear regression adapted to tweet distributions for an event
"""
parser=argparse.ArgumentParser(description="Script to perform simple linear regression adapted to tweet distributions for an event")
parser.add_argument('-i', action='store', required=True, help="file with either all instances or training instances")
parser.add_argument('-v', action='store', required=True, choices=["test","n-fold","looe"], help="specify the type of validation")
parser.add_argument('-t', action='store', required=False, help="[TEST] give the file with test data")
parser.add_argument('-n', action='store', required=False, help="[N-FOLD] specify n")
parser.add_argument('-l', action='store', required=False, nargs="+", help="[LOOE] specify the type of leave-one-out (regular,inner_domain or outer_domain), a meta-file, the column of the event in the metafile and (unless the type is \'regular\') a file with domain-event relations")
parser.add_argument('--vocab', action='store', required=False, help="[OPTIONAL] give a file with a vocabulary to use for pruning and feature selection")
parser.add_argument('-c', action='store', required=True, choices=["lcs","knn","ibt"], help="the classifier")
parser.add_argument('-a', action='store', required=False, nargs='+', help="the arguments needed for the chosen algorithm:\n\n[LCS] specify respectively the directory in which classification is performed (make sure the config file and optionally a data-directory with indexes are present in this directory) and the directory in which files are stored\n[KNN] specify value(s) of k (the classifier will be ran for each value of k)\n[IBT] for the informed baseline time, choose to set the system to dummy by filling in \"dummy\"")
parser.add_argument('-p', action='store', required=False, help="[OPTIONAL] to prune features, give a minimum frequency threshold")
parser.add_argument('-s', action='store', required=False, help="[OPTIONAL] to select features based on their infogain, specify the number of features to select") 
parser.add_argument('--tl', action='store_true', required=False, help="[OPTIONAL] set \'tl\' in order to have second stage or hidden timelabel classification")
parser.add_argument('--parralel', action='store_true', required=False, help="choose whether distinct train and test sets are ran in parrallel")

args=parser.parse_args() 